{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "91ba6fe9-ba68-4e24-b891-7cae81adb22a",
   "metadata": {},
   "outputs": [],
   "source": [
    "-- Create staging table\n",
    "CREATE TABLE nflix (\n",
    "    show_id varchar(10) primary key,\n",
    "    type varchar(10) NULL,\n",
    "    title varchar(200) NULL,\n",
    "    director varchar(250) NULL,\n",
    "    \"cast\" varchar(1000) NULL,\n",
    "    country varchar(150) NULL,\n",
    "    date_added varchar(20) NULL,\n",
    "    release_year int NULL,\n",
    "    rating varchar(10) NULL,\n",
    "    duration varchar(10) NULL,\n",
    "    listed_in varchar(100) NULL,\n",
    "    description varchar(500) NULL\n",
    ");\n",
    "\n",
    "select * from nflix\n",
    "limit 10;\n",
    "\n",
    "\n",
    "--- Deleting Duplicates\n",
    "SELECT *from nflix\n",
    "WHERE concat(upper(type),upper(title)) in(\n",
    "SELECT concat(upper(type),upper(title))\n",
    "FROM nflix\n",
    "GROUP BY concat(upper(type),upper(title))\n",
    "HAVING COUNT(*) > 1)\n",
    "ORDER BY title;\n",
    "\n",
    "WITH CTE AS(\n",
    "SELECT *,\n",
    "ROW_NUMBER() OVER(PARTITION BY upper(title),type ORDER BY show_id) AS rnk\n",
    "FROM nflix)\n",
    "\n",
    "SELECT * \n",
    "FROM CTE\n",
    "WHERE rnk=1;\n",
    "\n",
    "\n",
    "-- Normalizing the Tables\n",
    "\n",
    "-- Creating the Director Table\n",
    "CREATE TABLE nflix_director AS\n",
    "SELECT show_id, TRIM(value) AS director\n",
    "FROM nflix,\n",
    "unnest(string_to_array(director, ',')) AS value;\n",
    "\n",
    "SELECT * FROM nflix_director;\n",
    "\n",
    "-- Creating the Country Table\n",
    "CREATE TABLE nflix_country AS\n",
    "SELECT show_id, TRIM(value) AS country\n",
    "FROM nflix,\n",
    "unnest(string_to_array(country, ',')) AS value;\n",
    "\n",
    "SELECT * FROM nflix_country;\n",
    "\n",
    "-- Creating the Cast Table\n",
    "CREATE TABLE nflix_cast AS\n",
    "SELECT show_id, TRIM(value) AS cast\n",
    "FROM nflix,\n",
    "     unnest(string_to_array(\"cast\", ',')) AS value;\n",
    "\n",
    "SELECT * FROM nflix_cast;\n",
    "\n",
    "-- Creating the Genre Table\n",
    "CREATE TABLE nflix_genre AS\n",
    "SELECT show_id, TRIM(value) AS genre\n",
    "FROM nflix,\n",
    "     unnest(string_to_array(listed_in, ',')) AS value;\n",
    "\n",
    "SELECT * FROM nflix_genre;\n",
    "\n",
    "\n",
    "-- Null Value Handling\n",
    "INSERT INTO nflix_country\n",
    "SELECT show_id,m.country\n",
    "FROM nflix n\n",
    "INNER JOIN(\n",
    "SELECT director,country\n",
    "FROM nflix_country nc\n",
    "INNER JOIN nflix_director nd\n",
    "ON nc.show_id=nd.show_id\n",
    "GROUP BY director,nc.country) m\n",
    "ON n.director=m.director\n",
    "WHERE n.country IS NULL;\n",
    "\n",
    "SELECT * FROM nflix_country;\n",
    "\n",
    "-- Fixing Null duration\n",
    "SELECT *\n",
    "FROM nflix\n",
    "WHERE duration IS NULL\n",
    "\n",
    "--- Creating a Final Table\n",
    "CREATE TABLE netflix AS\n",
    "WITH cte AS (\n",
    "    SELECT *,\n",
    "           ROW_NUMBER() OVER (PARTITION BY title, type ORDER BY show_id) AS rn\n",
    "    FROM nflix\n",
    ")\n",
    "SELECT show_id,\n",
    "       type,\n",
    "       title,\n",
    "       CAST(date_added AS DATE) AS date_added,\n",
    "       release_year,\n",
    "       rating,\n",
    "       CASE WHEN duration IS NULL THEN rating ELSE duration END AS duration,\n",
    "       description\n",
    "FROM cte\n",
    "WHERE rn = 1;\n",
    "\n",
    "SELECT *\n",
    "FROM netflix;\n",
    "\n",
    "\n",
    "\n",
    "-- Netflix Data Analysis\n",
    "\n",
    "-- 1) For each director count the no of movies and tv shows created by them in separate columns \n",
    "-- for directors who have created tv shows and movies both\n",
    "\n",
    "WITH CTE AS (\n",
    "  SELECT n.show_id,n.type,d.director\n",
    "  FROM netflix n \n",
    "  JOIN nflix_director d\n",
    "  ON n.show_id=d.show_id)\n",
    "  \n",
    "SELECT director,\n",
    "SUM(CASE WHEN type='Movie' THEN 1 ELSE 0 END) AS movie_count,\n",
    "SUM(CASE WHEN type='TV Show' THEN 1 ELSE 0 END) AS movie_count\n",
    "FROM CTE\n",
    "GROUP BY director\n",
    "ORDER BY director;\n",
    "\n",
    "-- 2) Which country has highest number of comedy movies\n",
    "\n",
    "SELECT country,\n",
    "SUM(CASE WHEN genre like 'Comedies' THEN 1 ELSE 0 END) AS tot_comedy\n",
    "FROM netflix n\n",
    "JOIN nflix_country nc\n",
    "ON n.show_id=nc.show_id\n",
    "JOIN nflix_genre g\n",
    "ON n.show_id=g.show_id\n",
    "GROUP BY country\n",
    "ORDER BY tot_comedy DESC\n",
    "LIMIT 1;\n",
    "\n",
    "\n",
    "-- 3) For each year (as per date added to netflix), which director has maximum number of movies released\n",
    "WITH cte AS (\n",
    "  SELECT nd.director,\n",
    "         EXTRACT(YEAR FROM date_added) AS date_year,\n",
    "         COUNT(n.show_id) AS no_of_movies\n",
    "  FROM netflix n\n",
    "  INNER JOIN nflix_director nd ON n.show_id = nd.show_id\n",
    "  WHERE type = 'Movie'\n",
    "  GROUP BY nd.director, EXTRACT(YEAR FROM date_added)\n",
    "),\n",
    "cte2 AS (\n",
    "  SELECT *,\n",
    "         ROW_NUMBER() OVER (PARTITION BY date_year ORDER BY no_of_movies DESC, director) AS rn\n",
    "  FROM cte\n",
    ")\n",
    "SELECT * FROM cte2 WHERE rn = 1;\n",
    "\n",
    "-- 4) What is average duration of movies in each genre\n",
    "SELECT genre,\n",
    "ROUND(AVG(CAST(split_part(duration,' ',1) AS INT)),2)\n",
    "FROM netflix n\n",
    "JOIN nflix_genre g\n",
    "USING(show_id)\n",
    "WHERE type='Movie'\n",
    "GROUP BY genre;\n",
    "\n",
    "-- 5) Find the list of directors who have created horror and comedy movies both.\n",
    "-- display director names along with number of comedy and horror movies directed by them\n",
    "\n",
    "WITH CTE AS (\n",
    "SELECT director,\n",
    "SUM(CASE WHEN genre like '%Comedies%' THEN 1 ELSE 0 END) AS comedy_count,\n",
    "SUM(CASE WHEN genre like '%Horror%' THEN 1 ELSE 0 END) AS horror_count\n",
    "FROM netflix n\n",
    "JOIN nflix_director d\n",
    "USING(show_id)\n",
    "JOIN nflix_genre g\n",
    "USING(show_id)\n",
    "WHERE type='Movie'\n",
    "GROUP BY director)\n",
    "\n",
    "SELECT *\n",
    "FROM CTE\n",
    "WHERE comedy_count>0 AND horror_count>0\n",
    "ORDER BY director"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
